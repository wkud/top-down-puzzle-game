//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Scripts/InputSystem/InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace Project.InputSystem
{
    public partial class @InputActions : IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @InputActions()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""Main"",
            ""id"": ""8b3d232e-962c-48cb-8099-52fb3437d6dc"",
            ""actions"": [
                {
                    ""name"": ""Beat"",
                    ""type"": ""Button"",
                    ""id"": ""58dfd74a-a934-4df8-918c-72391019e5c6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MovePlayer1"",
                    ""type"": ""Value"",
                    ""id"": ""5c86cc69-7212-4caa-8355-046fdcadee91"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MovePlayer2"",
                    ""type"": ""Value"",
                    ""id"": ""225c7795-5fe4-4bad-a582-3e432205f969"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""InteractPlayer1"",
                    ""type"": ""Button"",
                    ""id"": ""3e0aa71e-155a-4aa4-8560-2e55bb8d2c3d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InteractPlayer2"",
                    ""type"": ""Button"",
                    ""id"": ""08372ed4-8c14-4a77-80b5-61719aad18c4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""32f79113-de15-41ee-9a45-1c82301556b2"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Beat"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""d25e8d0e-9b70-44bc-9c3b-d436da527d1c"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovePlayer1"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""927822b9-4f56-4544-bdd3-1a679b827980"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovePlayer1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""1a647cce-2c8a-4aaf-a052-b7fb5f6c2d5e"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovePlayer1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""0f922b76-968a-44da-8f9f-131ba3cf6a37"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovePlayer1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""6cd6655f-77b8-48d9-b038-97fc4122ae38"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovePlayer1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""3785c603-ce0e-423b-9f5d-dd57fec46e6e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovePlayer2"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""41641a6e-0d81-4b60-98ff-031662faba53"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovePlayer2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""6d53b026-a646-45c1-8941-4f825dfffe28"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovePlayer2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""01131b31-5d59-4d6e-bd9c-9dffbc085563"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovePlayer2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""6fee6187-d3cf-4473-96c8-86a8181fd3a9"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovePlayer2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""3972fba5-f4b7-42a0-828a-57edaaafbe90"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InteractPlayer1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""896b13ef-33a5-4aae-a70c-d7382b3d98cf"",
                    ""path"": ""<Keyboard>/numpad0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InteractPlayer2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // Main
            m_Main = asset.FindActionMap("Main", throwIfNotFound: true);
            m_Main_Beat = m_Main.FindAction("Beat", throwIfNotFound: true);
            m_Main_MovePlayer1 = m_Main.FindAction("MovePlayer1", throwIfNotFound: true);
            m_Main_MovePlayer2 = m_Main.FindAction("MovePlayer2", throwIfNotFound: true);
            m_Main_InteractPlayer1 = m_Main.FindAction("InteractPlayer1", throwIfNotFound: true);
            m_Main_InteractPlayer2 = m_Main.FindAction("InteractPlayer2", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }
        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }
        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Main
        private readonly InputActionMap m_Main;
        private IMainActions m_MainActionsCallbackInterface;
        private readonly InputAction m_Main_Beat;
        private readonly InputAction m_Main_MovePlayer1;
        private readonly InputAction m_Main_MovePlayer2;
        private readonly InputAction m_Main_InteractPlayer1;
        private readonly InputAction m_Main_InteractPlayer2;
        public struct MainActions
        {
            private @InputActions m_Wrapper;
            public MainActions(@InputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @Beat => m_Wrapper.m_Main_Beat;
            public InputAction @MovePlayer1 => m_Wrapper.m_Main_MovePlayer1;
            public InputAction @MovePlayer2 => m_Wrapper.m_Main_MovePlayer2;
            public InputAction @InteractPlayer1 => m_Wrapper.m_Main_InteractPlayer1;
            public InputAction @InteractPlayer2 => m_Wrapper.m_Main_InteractPlayer2;
            public InputActionMap Get() { return m_Wrapper.m_Main; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(MainActions set) { return set.Get(); }
            public void SetCallbacks(IMainActions instance)
            {
                if (m_Wrapper.m_MainActionsCallbackInterface != null)
                {
                    @Beat.started -= m_Wrapper.m_MainActionsCallbackInterface.OnBeat;
                    @Beat.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnBeat;
                    @Beat.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnBeat;
                    @MovePlayer1.started -= m_Wrapper.m_MainActionsCallbackInterface.OnMovePlayer1;
                    @MovePlayer1.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnMovePlayer1;
                    @MovePlayer1.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnMovePlayer1;
                    @MovePlayer2.started -= m_Wrapper.m_MainActionsCallbackInterface.OnMovePlayer2;
                    @MovePlayer2.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnMovePlayer2;
                    @MovePlayer2.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnMovePlayer2;
                    @InteractPlayer1.started -= m_Wrapper.m_MainActionsCallbackInterface.OnInteractPlayer1;
                    @InteractPlayer1.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnInteractPlayer1;
                    @InteractPlayer1.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnInteractPlayer1;
                    @InteractPlayer2.started -= m_Wrapper.m_MainActionsCallbackInterface.OnInteractPlayer2;
                    @InteractPlayer2.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnInteractPlayer2;
                    @InteractPlayer2.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnInteractPlayer2;
                }
                m_Wrapper.m_MainActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Beat.started += instance.OnBeat;
                    @Beat.performed += instance.OnBeat;
                    @Beat.canceled += instance.OnBeat;
                    @MovePlayer1.started += instance.OnMovePlayer1;
                    @MovePlayer1.performed += instance.OnMovePlayer1;
                    @MovePlayer1.canceled += instance.OnMovePlayer1;
                    @MovePlayer2.started += instance.OnMovePlayer2;
                    @MovePlayer2.performed += instance.OnMovePlayer2;
                    @MovePlayer2.canceled += instance.OnMovePlayer2;
                    @InteractPlayer1.started += instance.OnInteractPlayer1;
                    @InteractPlayer1.performed += instance.OnInteractPlayer1;
                    @InteractPlayer1.canceled += instance.OnInteractPlayer1;
                    @InteractPlayer2.started += instance.OnInteractPlayer2;
                    @InteractPlayer2.performed += instance.OnInteractPlayer2;
                    @InteractPlayer2.canceled += instance.OnInteractPlayer2;
                }
            }
        }
        public MainActions @Main => new MainActions(this);
        public interface IMainActions
        {
            void OnBeat(InputAction.CallbackContext context);
            void OnMovePlayer1(InputAction.CallbackContext context);
            void OnMovePlayer2(InputAction.CallbackContext context);
            void OnInteractPlayer1(InputAction.CallbackContext context);
            void OnInteractPlayer2(InputAction.CallbackContext context);
        }
    }
}
